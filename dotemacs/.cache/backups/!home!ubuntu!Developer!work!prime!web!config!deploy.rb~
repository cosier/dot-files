require 'capistrano/nginx/tasks'

set :stages, %w(production staging ezcontacts)

#set :default_stage, "staging"
set :default_stage, "ezcontacts"

require 'capistrano/ext/multistage'

set :application,      "prime"
set :application_name, "prime"


# ########################################
# Deployment tasks
namespace :deploy do
  task :start do ; end
  task :stop do ; end

  desc "Precompile assets after deploy"
  task :precompile_assets do
    run <<-CMD
      cd #{ current_path } &&
      #{ sudo } bundle exec rake assets:precompile RAILS_ENV=#{ rails_env }
    CMD
  end
  desc "Symlink shared config files"
  task :symlink_config_files do
    run "#{ sudo } rm -rf   #{ current_path }/log"
    run "#{ sudo } mkdir -p #{ deploy_to }/shared/log/"
    run "#{ sudo } ln -sf   #{ deploy_to }/shared/log/ #{ current_path }/log"
  end

  desc "Run Bundler to ensure all gems up tiptop"
  task :bundle do
    run "cd #{ current_path } && bundle"
  end
end

# ########################################
# Server Manager - operating system related tasks
namespace :servermgr do

  task :start do ; end
  task :stop do ; end

  desc "Installs required libraries and packages from the OS's package-manager"
  task :install do
    # Ruby Gem Dependencies
    run "# { sudo } apt-get -y install libavahi-compat-libdnssd-dev"
    # System Ruby
    run "#{ sudo } apt-get -y install ruby2.0 ruby2.0-dev libruby2.0"
  end
end


before "deploy",  "nginx:setup"
after  "deploy",  "deploy:symlink_config_files"
after  "deploy",  "deploy:restart"
after  "deploy",  "deploy:cleanup"
after  "deploy",  "deploy:bundle"
after  "deploy",  "nginx:reload"

# if you want to clean up old releases on each deploy uncomment this:
# after "deploy:restart", "deploy:cleanup"

# If you are using Passenger mod_rails uncomment this:
namespace :deploy do
  task :start do ; end
  task :stop do ; end
  desc "Restart application"
  task :restart, :roles => :app, :except => { :no_release => true } do
    run "#{try_sudo} touch #{File.join(current_path,'tmp','restart.txt')}"
  end
end
